name: 🚀 CI/CD for Spring Boot with Docker

on:
  push:
    branches:
      - main  # main 브랜치에 push될 때만 실행

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: 🔄 코드 체크아웃
        uses: actions/checkout@v4

      - name: 🔧 JDK 17 설정
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: 🏗️ Gradle 빌드
        run: |
          chmod +x gradlew
          ./gradlew build -x test  # 테스트 제외하고 빌드

      - name: 🐳 Docker Hub 로그인
        run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

      - name: 📦 Docker 이미지 빌드 및 푸시
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/springboot-app .
          docker push ${{ secrets.DOCKER_USERNAME }}/springboot-app

  deploy:
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: 🚀 원격 서버 접속 및 컨테이너 재배포
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          # .pem 파일 내용 전체(-----BEGIN ~ END-----)를
          # 그대로 GitHub Secrets에 넣었다면, 아래처럼 사용합니다.
          key: ${{ secrets.SERVER_SSH_KEY }}
          script: |
            docker pull ${{ secrets.DOCKER_USERNAME }}/springboot-app
            docker stop springboot_app || true
            docker rm springboot_app || true
            docker run -d --name springboot_app -p 8080:8080 ${{ secrets.DOCKER_USERNAME }}/springboot-app
